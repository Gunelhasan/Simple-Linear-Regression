Linear Regression is a statistical approach used to model the relationship between a dependent variable and one or more independent variables, 
allowing us to predict continuous outcomes. This technique is commonly applied in supervised learning scenarios for regression tasks. 

Linear Regression comes in two forms: Simple and Multiple Linear Regression. In this project, I’m using Simple Linear Regression, 
which involves just one independent variable and one dependent variable. 
This method aims to fit a straight line through the data, representing the linear relationship.


Simple Linear Regression (SLR) is one of the fundamental models in machine learning, designed to capture a linear relationship between an independent variable and a dependent variable.

In this project, we have one input or independent variable, 
X - representing Years experience, 
and one output or dependent variable,
Y - representing Advertising data

Our objective is to model a linear relationship between these variables, which can be represented by the equation:
Y= β0 +β1 ⋅X

Codes (Machine learning):

# Simple Linear Regression

# Importing the dataset
dataset = read.csv("Salary_Data.csv")

# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)

# Feature Scaling
 training_set = scale(training_set)
 test_set = scale(test_set)

# Fitting Simple Linear Model to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
               data =training_set)
summary(regressor)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)

# Visualising the Training set results
library(ggplot2)
ggplot() +
  geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
             colour = 'red') +
  geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
            colour = 'blue') +
  ggtitle('Salary vs Experience (Training set)') +
  xlab('Years of experience') +
  ylab('Salary')

# Visualising the Test set results
library(ggplot2)
ggplot() +
  geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
             colour = 'red') +
  geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
            colour = 'blue') +
  ggtitle('Salary vs Experience (Test set)') +
  xlab('Years of experience') +
  ylab('Salary')


Result: 
Residual standard error: 0.1925 on 18 degrees of freedom
Multiple R-squared:  0.9649,	Adjusted R-squared:  0.963 
F-statistic: 494.8 on 1 and 18 DF,  p-value: 1.524e-14

